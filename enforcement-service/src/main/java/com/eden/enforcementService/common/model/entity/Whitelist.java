package com.eden.enforcementService.common.model.entity;import com.eden.enforcementService.common.model.enums.VehicleType;import com.eden.enforcementService.util.Constants;import com.fasterxml.jackson.annotation.JsonManagedReference;import lombok.*;import lombok.experimental.SuperBuilder;import org.hibernate.annotations.*;import javax.persistence.CascadeType;import javax.persistence.Entity;import javax.persistence.Table;import javax.persistence.*;import javax.validation.constraints.NotNull;import java.util.ArrayList;import java.util.List;@Entity@Getter@Setter@NoArgsConstructor@AllArgsConstructor@SuperBuilder@Table(name = "whitelist"//        ,uniqueConstraints = {//                @UniqueConstraint(name = "UniqueNumberAndStatus", columnNames = {"plateNumberEn", "country"})})@Where(clause = "deleted <> true")@SQLDelete(sql = "UPDATE {h-schema} whitelist SET deleted = true WHERE id = ?", check = ResultCheckStyle.COUNT)public class Whitelist extends BaseEntity {    @Id    @SequenceGenerator(name = "white_list_vehicle_seq",            sequenceName = "white_list_vehicle_seq",            allocationSize = 1, initialValue = 1)    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "white_list_vehicle_seq")    private Long id;    @Column(name = "plate_number_ar")    private String plateNumberAr;    @Column(name = "plate_number_en")    private String plateNumberEn;    @Column(name = "country", nullable = false)    private String country;    @Column(name = "color_id")    private Long colorId;    @Column(name = "make_id")    private Long makeId;    @Column(name = "model")    private String model;    @NotNull(message = Constants.ErrorKeys.EMPTY_VEHICLE_TYPE)    @Column(name = "type")    @Enumerated(EnumType.STRING)    private VehicleType type;    private Long operationId;    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "whitelist")    @Fetch(FetchMode.SUBSELECT)    @JsonManagedReference    private List<WhitelistDetails> whitelistDetails = new ArrayList<>();    public Whitelist(Long id) {        this.id = id;    }}